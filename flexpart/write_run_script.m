function write_run_script(end_datetime_in, run_duration, year)
%%% write_run_script(end_datetime_in, run_duration)
%
% Generates script to run FLEXPART back trajectory calculations
% for a list of stating times
% INPUT:
%   end_datetime_in: date and time of interest; the backward run starts
%       from this time (datetime format)
%   run_duration: duration of the backwards run in days
%
% OUTPUT: bash script that runs FLEXPART for each of the times in
% end_datetime_in. FLEXPART output is saved in out_<yyyymmdd>_<HHMMSS>
% folders. The settings are given in the files in the main flexpart
% directory; these files (COMMAND, RELEASES and pathnames) are copied into
% /options for each set of runs. To modify other settings, edit files in
% /options.


% % test
% year=1;
% x=datetime(now-2*365,'convertfrom','datenum');
% end_date_arr=[datestr(x,'yyyymmdd')];
% start_date_arr=[datestr(x-1,'yyyymmdd')];
% time_arr=['180000'];
% for i=1:2
%     end_date_arr=[end_date_arr, ' ', datestr(x+duration(days(i)),'yyyymmdd')];
%     start_date_arr=[start_date_arr, ' ', datestr(x-1+duration(days(i)),'yyyymmdd')];
%     time_arr=[time_arr, ' 180000'];
% end

%% generate list of dates and times

% calculate start dates (how far back the backwards run goes)
start_datetime_in=end_datetime_in-run_duration;

end_date_arr=datestr(end_datetime_in(1),'yyyymmdd');
start_date_arr=datestr(start_datetime_in(1),'yyyymmdd');
time_arr=datestr(end_datetime_in(1),'HHMMSS');
for i=2:length(end_datetime_in)
   
    end_date_arr=[end_date_arr, ' ', datestr(end_datetime_in(i),'yyyymmdd')];
    start_date_arr=[start_date_arr, ' ', datestr(start_datetime_in(i),'yyyymmdd')];
    
    time_arr=[time_arr, ' ', datestr(end_datetime_in(i),'HHMMSS')];
    
end


%% write shell script
save_dir='/home/kristof/atmosp_servers/export/data/home/kbognar/FLEXPART_10.02/options/';

% shell script file name
if length(year)==1
    if year==1 % rerun part of te dataset
        shell_script=[save_dir 'run_flexpart_tmp.sh'];
    else % sun single year
        shell_script=[save_dir 'run_flexpart_' num2str(year) '.sh'];
    end
else % run range of years
    shell_script=[save_dir 'run_flexpart_' num2str(year(1)) '-' ...
                                           num2str(year(end)) '.sh'];
end

% check if script exists, wipe if yes
if exist(shell_script,'file')
    system(['rm ' shell_script]);
    system(['touch ' shell_script]);
else
    system(['touch ' shell_script]);
end

fid=fopen(shell_script, 'w');

% header info
fprintf(fid,'#!/bin/bash');
fprintf(fid,'\n');
fprintf(fid,'\n');
fprintf(fid,'# Script to run FLEXPART for a list of starting dates\n');
fprintf(fid,'# Start dates: start of the time period, end point of the backward run\n');
fprintf(fid,'# End dates: end of the time period, where backward run starts from\n');
fprintf(fid,'# Script must be in /options directory\n');
fprintf(fid,'#\n');
fprintf(fid,'# Generated by write_run_script.m\n');
fprintf(fid,'\n');

% initialize arrays with start and stop dates/times
fprintf(fid,['start_date_arr=(' start_date_arr ')\n']);
fprintf(fid,['end_date_arr=(' end_date_arr ')\n']);
fprintf(fid,['time_arr=(' time_arr ')\n']);
fprintf(fid,'\n');

% set initial values to placeholders in files
fprintf(fid,'start_date_prev=tmp_start\n'); % in COMMAND
fprintf(fid,'end_date_prev=tmp_end\n'); % in COMMAND and 2x in RELEASES
fprintf(fid,'time_prev=xxxxxx\n'); % in COMMAND and 2x in RELEASES
fprintf(fid,'out_dir_prev=/export/data/home/kbognar/FLEXPART_10.02/tmp/\n'); % pathnames
fprintf(fid,'\n');

% copy control files into /options
fprintf(fid,'cp ../COMMAND_template ./COMMAND\n');
fprintf(fid,'cp ../RELEASES_template ./RELEASES\n');
fprintf(fid,'cp ../pathnames_template ./pathnames\n');
fprintf(fid,'\n');

% loop over the length of the arrays
fprintf(fid,'i=0\n');
fprintf(fid,'while [[ $i -le ${#start_date_arr[@]}-1 ]]\n');
fprintf(fid,'do\n');

    fprintf(fid,'\n');

    % set current values of dates and time
    fprintf(fid,'\tstart_date_curr=${start_date_arr[$i]}\n');
    fprintf(fid,'\tend_date_curr=${end_date_arr[$i]}\n');
    fprintf(fid,'\ttime_curr=${time_arr[$i]}\n');
    fprintf(fid,['\tout_dir_curr=/export/data/home/kbognar/FLEXPART_10.02/'...
                'out_${end_date_arr[$i]}_${time_arr[$i]}/\n']);
    fprintf(fid,'\n');

    % replace date and time in COMMAND and RELEASES, and rename folder in pathnames
    % replace end date first, to avoid accidental match of start and end
    % g option in sed replaces all occurrences -- don't want that for dates in COMMAND
    fprintf(fid,'\tsed -i -e "s/${end_date_prev}/${end_date_curr}/" COMMAND\n');
    fprintf(fid,'\tsed -i -e "s/${start_date_prev}/${start_date_curr}/" COMMAND\n');
    fprintf(fid,'\tsed -i -e "s/${time_prev}/${time_curr}/g" COMMAND\n');
    
    fprintf(fid,'\tsed -i -e "s/${end_date_prev}/${end_date_curr}/g" RELEASES\n');
    fprintf(fid,'\tsed -i -e "s/${time_prev}/${time_curr}/g" RELEASES\n');
    
    % use different delimiter in sed since directory names have /
    fprintf(fid,'\tsed -i -e "s|${out_dir_prev}|${out_dir_curr}|" pathnames\n');
    fprintf(fid,'\n');
    
    % create output folder (previous runs with same date andtime are removed)
	fprintf(fid,'\tif [ -d "$out_dir_curr" ]\n');
	fprintf(fid,'\tthen \n');
		fprintf(fid,'\t\trm -rf "$out_dir_curr"\n');
        fprintf(fid,'\t\tmkdir "$out_dir_curr"\n');
	fprintf(fid,'\telse \n');
		fprintf(fid,'\t\tmkdir "$out_dir_curr"\n');
	fprintf(fid,'\tfi\n');
    fprintf(fid,'\n');
    
    % run flexpart
    fprintf(fid,'\t./FP_gfs_gfortran\n');
    fprintf(fid,'\n');

    % save current dates and time for next iteration
    fprintf(fid,'\tstart_date_prev=$start_date_curr\n');
    fprintf(fid,'\tend_date_prev=$end_date_curr\n');
    fprintf(fid,'\ttime_prev=$time_curr\n');
    fprintf(fid,'\tout_dir_prev=$out_dir_curr\n');
    fprintf(fid,'\n');

    % advance loop counter
    fprintf(fid,'\t((i = i + 1))\n');
    
fprintf(fid,'done\n');
fprintf(fid,'\n');

% remove control files
fprintf(fid,'rm COMMAND\n');
fprintf(fid,'rm RELEASES\n');
fprintf(fid,'rm pathnames\n');

fprintf(fid,'\n');
fclose(fid);



end

